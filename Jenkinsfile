pipeline {
    agent any

    environment {
        // ‡πÉ‡∏ä‡πâ Jenkins Credentials ID ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
        GIT_CREDENTIALS_ID = 'github-pat'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/youruser/your-java-project.git',
                    credentialsId: "${GIT_CREDENTIALS_ID}"
            }
        }

        stage('Build') {
            steps {
                echo 'üîß Building project...'
                sh './mvnw clean package -DskipTests' // ‡∏´‡∏£‡∏∑‡∏≠ mvn ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Maven ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ
            }
        }

        stage('Test') {
            steps {
                echo '‚úÖ Running unit tests...'
                sh './mvnw test'
            }
        }

        stage('Deploy') {
            steps {
                echo 'üöÄ Deploying...'
                // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: Copy JAR ‡πÑ‡∏õ server (‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á SCP), ‡∏´‡∏£‡∏∑‡∏≠ Deploy Docker ‡∏Å‡πá‡πÑ‡∏î‡πâ
                // SCP ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ssh-agent plugin + ‡πÉ‡∏™‡πà credentials SSH ‡πÑ‡∏ß‡πâ)
                // sh 'scp -i /path/to/key.pem target/your-app.jar ubuntu@your-server:/home/ubuntu/'

                // ‡∏´‡∏£‡∏∑‡∏≠ Deploy ‡∏ú‡πà‡∏≤‡∏ô Docker
                // sh 'docker build -t your-image-name .'
                // sh 'docker run -d -p 8080:8080 your-image-name'
            }
        }
    }

    post {
        success {
            echo 'üéâ Deployment succeeded!'
        }
        failure {
            echo '‚ùå Deployment failed!'
        }
    }
}
