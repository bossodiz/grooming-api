pipeline {
  agent any
  options { timestamps() }

  environment {
    COMPOSE_PROJECT     = 'bbp'
    DEPLOY_COMPOSE_APP  = '/workspace/deploy/docker-compose-app.yml'
    APP_NAME            = 'grooming-api'
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }   // ดึงโค้ดทั้ง repo
    }

    stage('Compute Tag') {
      steps {
        script {
          def shortHash = sh(returnStdout: true, script: 'git rev-parse --short=7 HEAD').trim()
          def dt        = sh(returnStdout: true, script: 'date +%Y%m%d-%H%M%S').trim()
          env.IMG_TAG   = "${dt}-${shortHash}"
          echo "Image tag: ${env.IMG_TAG}"
        }
      }
    }

    stage('Build & Push Docker') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-creds',
                                            usernameVariable: 'DOCKER_USER',
                                            passwordVariable: 'DOCKER_PASS')]) {
            sh """
              set -e
              echo "\$DOCKER_PASS" | docker login -u "\$DOCKER_USER" --password-stdin
              IMAGE="\$DOCKER_USER/${APP_NAME}:${IMG_TAG}"
              LATEST="\$DOCKER_USER/${APP_NAME}:latest"
              docker build --pull -t "\$IMAGE" -t "\$LATEST" -f Dockerfile .
              docker push "\$IMAGE"
              docker push "\$LATEST"
            """
          }
        }
      }
    }

    stage('Deploy (api)') {
      steps {
        sh """
          set -e
          docker compose -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} pull api
          docker compose -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} up -d api
        """
      }
    }
  }
}
