pipeline {
  agent any
  options { timestamps(); disableConcurrentBuilds() }  // กัน build ซ้อน

  environment {
    APP_NAME            = 'grooming-api'
    SERVICE_NAME        = 'api'
    COMPOSE_PROJECT     = 'bbp'
    DEPLOY_DIR          = '/workspace/deploy'
    DEPLOY_COMPOSE_APP  = "${DEPLOY_DIR}/docker-compose-app.yml"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Compute Tag') {
      steps {
        script {
          def shortHash = sh(returnStdout: true, script: 'git rev-parse --short=7 HEAD').trim()
          def dt        = sh(returnStdout: true, script: 'date +%Y%m%d-%H%M%S').trim()
          env.IMG_TAG   = "${dt}-${shortHash}"
          echo "Image tag: ${env.IMG_TAG}"
        }
      }
    }

    stage('Build & Push Docker') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-creds',
                                            usernameVariable: 'DOCKER_USER',
                                            passwordVariable: 'DOCKER_PASS')]) {
            sh """
              set -e
              echo "\$DOCKER_PASS" | docker login -u "\$DOCKER_USER" --password-stdin

              NAMESPACE="\$DOCKER_USER"
              IMAGE="\$NAMESPACE/${APP_NAME}:${IMG_TAG}"
              LATEST="\$NAMESPACE/${APP_NAME}:latest"

              docker build --pull -t "\$IMAGE" -t "\$LATEST" -f Dockerfile .
              docker push "\$IMAGE"
              docker push "\$LATEST"
            """
          }
        }
      }
    }

    stage('Deploy') {
      steps {
        dir("${DEPLOY_DIR}") {
          sh """
            set -e
            docker compose --env-file .env -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} pull ${SERVICE_NAME}
            docker compose --env-file .env -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} up -d ${SERVICE_NAME}
          """
        }
      }
    }
  }

  post {
    success { echo "✅ Deployed ${env.APP_NAME}:${env.IMG_TAG} to service ${env.SERVICE_NAME}" }
    failure { echo "❌ Build/Deploy failed for ${env.APP_NAME}" }
  }
}
