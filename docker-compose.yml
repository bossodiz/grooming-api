# docker-compose.yml  (db + api)

networks:
  appnet:
    external: true

volumes:
  mysql_data:
    name: bbp_mysql_data_main   # ชื่อคงที่ ไม่ผูกกับ -p ชื่อโปรเจ็กต์

services:
  db:
    image: mysql:8.0
    container_name: bbp-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}       # เลือก prod หรือ dev ให้ตรงที่ต้องการใช้
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Bangkok
    command: ["mysqld","--default-authentication-plugin=mysql_native_password"]
    ports:
      - "3306:3306"        # ถ้าจะไม่ให้ LAN ต่อเข้ามา ตัดบรรทัดนี้ออก
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      appnet:
        aliases:
          - db             # ให้ชื่อ db ใช้ได้แน่ ๆ ภายใน network
          - bbp-db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bbp-api
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Bangkok
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      TZ: Asia/Bangkok
      JAVA_TOOL_OPTIONS: "-Xms128m -Xmx512m"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "18080:8080"
    networks: [appnet]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/actuator/health || curl -sf http://127.0.0.1:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
